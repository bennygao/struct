/******************************************************************************
 * SetWakeup.java
 * GENERATED BY StructCompiler, DON'T MODIFY MANULLY.
 * Generated Time: Sat Apr 16 13:27:38 CST 2016
 */
package cc.devfun.struct.test.struct;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

/**
 * struct SetWakeup
 */
public class SetWakeup extends Struct {
    // Set唤醒意图
    // set wkup:0x0100
    // set wkup trn:0x0110
    // set wkup glb:0x0120
    // set wkup ch:0x0130
    private short command;

    private int length;

    private short baudrate;

    private byte power;

    private byte duration;

    private byte slotDuration;

    private byte[] reserved;

    private SetWakeupData setWakeupPacket;

    public SetWakeup() {
        this.command = (short) 0x0100;

        this.length = 0;

        this.baudrate = (short) 0;

        this.power = (byte) 0;

        this.duration = (byte) 0;

        this.slotDuration = (byte) 0;

        this.reserved = new byte[8];
        java.util.Arrays.fill(this.reserved, (byte) 0);

        setWakeupPacket = new SetWakeupData();

    }
    public short getCommand() {
        return this.command;
    }

    public void setCommand(short command) {
        this.command = command;
    }

    public int getLength() {
        return this.length;
    }

    public void setLength(int length) {
        this.length = length;
    }

    public short getBaudrate() {
        return this.baudrate;
    }

    public void setBaudrate(short baudrate) {
        this.baudrate = baudrate;
    }

    public byte getPower() {
        return this.power;
    }

    public void setPower(byte power) {
        this.power = power;
    }

    public byte getDuration() {
        return this.duration;
    }

    public void setDuration(byte duration) {
        this.duration = duration;
    }

    public byte getSlotDuration() {
        return this.slotDuration;
    }

    public void setSlotDuration(byte slotDuration) {
        this.slotDuration = slotDuration;
    }

    public byte[] getReserved() {
        return this.reserved;
    }

    public SetWakeupData getSetWakeupPacket() {
        return this.setWakeupPacket;
    }


    public int calcSize() {
        int __size = 0;

        __size += 2 * 1;

        __size += 4 * 1;

        __size += 2 * 1;

        __size += 1 * 1;

        __size += 1 * 1;

        __size += 1 * 1;

        __size += 1 * 8;

        __size += this.setWakeupPacket.calcSize();

        return __size;
    }

    public void encode(DataOutput dos) throws IOException {
        write(dos, this.command, short.class);

        write(dos, this.length, int.class);

        write(dos, this.baudrate, short.class);

        write(dos, this.power, byte.class);

        write(dos, this.duration, byte.class);

        write(dos, this.slotDuration, byte.class);

        for (int i = 0; i < 8; ++i) {
            write(dos, this.reserved[i], byte.class);
        }

        this.setWakeupPacket.encode(dos);

    }

    public Struct decode(DataInput dis) throws IOException {
        this.command = read(dis, short.class);

        this.length = read(dis, int.class);

        this.baudrate = read(dis, short.class);

        this.power = read(dis, byte.class);

        this.duration = read(dis, byte.class);

        this.slotDuration = read(dis, byte.class);

        for (int i = 0; i < 8; ++i) {
            this.reserved[i] = read(dis, byte.class);
        }

        this.setWakeupPacket.decode(dis);

        return this;
    }
}
