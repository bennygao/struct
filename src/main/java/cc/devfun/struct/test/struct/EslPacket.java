/******************************************************************************
 * EslPacket.java
 * GENERATED BY StructCompiler, DON'T MODIFY MANULLY.
 * Generated Time: Sat Apr 16 13:27:38 CST 2016
 */
package cc.devfun.struct.test.struct;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

/**
 * struct EslPacket
 */
public class EslPacket extends Struct {
    private byte[] id;

    private byte channel;

    private byte len;

    private byte[] data;

    public EslPacket() {
        this.id = new byte[4];
        java.util.Arrays.fill(this.id, (byte) 0);

        this.channel = (byte) 0;

        this.len = (byte) 0;

        this.data = new byte[26];
        java.util.Arrays.fill(this.data, (byte) 0);

    }
    public byte[] getId() {
        return this.id;
    }

    public byte getChannel() {
        return this.channel;
    }

    public void setChannel(byte channel) {
        this.channel = channel;
    }

    public byte getLen() {
        return this.len;
    }

    public void setLen(byte len) {
        this.len = len;
    }

    public byte[] getData() {
        return this.data;
    }


    public int calcSize() {
        int __size = 0;

        __size += 1 * 4;

        __size += 1 * 1;

        __size += 1 * 1;

        __size += 1 * 26;

        return __size;
    }

    public void encode(DataOutput dos) throws IOException {
        for (int i = 0; i < 4; ++i) {
            write(dos, this.id[i], byte.class);
        }

        write(dos, this.channel, byte.class);

        write(dos, this.len, byte.class);

        for (int i = 0; i < 26; ++i) {
            write(dos, this.data[i], byte.class);
        }

    }

    public Struct decode(DataInput dis) throws IOException {
        for (int i = 0; i < 4; ++i) {
            this.id[i] = read(dis, byte.class);
        }

        this.channel = read(dis, byte.class);

        this.len = read(dis, byte.class);

        for (int i = 0; i < 26; ++i) {
            this.data[i] = read(dis, byte.class);
        }

        return this;
    }
}
