/******************************************************************************
 * HTPv3Head.java
 * GENERATED BY StructCompiler, DON'T MODIFY MANULLY.
 * Generated Time: Sat Apr 16 13:27:38 CST 2016
 */
package cc.devfun.struct.test.struct;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

/**
 * struct HTPv3Head
 */
public class HTPv3Head extends Struct {
    // 协议版本，字符串类型，暂时使用"htp v3.0"
    private String version;

    // HTP任务的时间戳，类型为字符串，定长14个字节，格式为 20140225151859，用尾零补齐。
    // 基站在返回HTPv3 task的响应时，会把这个字段原值返回给esl-working，所以esl-working可用此字段作为task ID使用。
    private String timestamp;

    // 预留
    private String reserved;

    public HTPv3Head() {
        this.version = (String) "htp v3.0";

        this.timestamp = null;

        this.reserved = null;

    }
    public String getVersion() {
        return this.version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public String getTimestamp() {
        return this.timestamp;
    }

    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    public String getReserved() {
        return this.reserved;
    }

    public void setReserved(String reserved) {
        this.reserved = reserved;
    }


    public int calcSize() {
        int __size = 0;

        __size += 16;

        __size += 16;

        __size += 16;

        return __size;
    }

    public void encode(DataOutput dos) throws IOException {
        writeString(this.version, 16, dos);

        writeString(this.timestamp, 16, dos);

        writeString(this.reserved, 16, dos);

    }

    public Struct decode(DataInput dis) throws IOException {
        this.version = readString(dis, 16);

        this.timestamp = readString(dis, 16);

        this.reserved = readString(dis, 16);

        return this;
    }
}
