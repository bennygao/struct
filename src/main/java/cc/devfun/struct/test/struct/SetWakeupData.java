/******************************************************************************
 * SetWakeupData.java
 * GENERATED BY StructCompiler, DON'T MODIFY MANULLY.
 * Generated Time: Sat Apr 16 13:27:38 CST 2016
 */
package cc.devfun.struct.test.struct;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

/**
 * struct SetWakeupData
 */
public class SetWakeupData extends Struct {
    private byte[] setId;

    private byte channel;

    private byte length;

    private SetWakeupFrame setWakeupFrame;

    public SetWakeupData() {
        this.setId = new byte[4];
        java.util.Arrays.fill(this.setId, (byte) 0);

        this.channel = (byte) 0;

        this.length = (byte) 0;

        setWakeupFrame = new SetWakeupFrame();

    }
    public byte[] getSetId() {
        return this.setId;
    }

    public byte getChannel() {
        return this.channel;
    }

    public void setChannel(byte channel) {
        this.channel = channel;
    }

    public byte getLength() {
        return this.length;
    }

    public void setLength(byte length) {
        this.length = length;
    }

    public SetWakeupFrame getSetWakeupFrame() {
        return this.setWakeupFrame;
    }


    public int calcSize() {
        int __size = 0;

        __size += 1 * 4;

        __size += 1 * 1;

        __size += 1 * 1;

        __size += this.setWakeupFrame.calcSize();

        return __size;
    }

    public void encode(DataOutput dos) throws IOException {
        for (int i = 0; i < 4; ++i) {
            write(dos, this.setId[i], byte.class);
        }

        write(dos, this.channel, byte.class);

        write(dos, this.length, byte.class);

        this.setWakeupFrame.encode(dos);

    }

    public Struct decode(DataInput dis) throws IOException {
        for (int i = 0; i < 4; ++i) {
            this.setId[i] = read(dis, byte.class);
        }

        this.channel = read(dis, byte.class);

        this.length = read(dis, byte.class);

        this.setWakeupFrame.decode(dis);

        return this;
    }
}
