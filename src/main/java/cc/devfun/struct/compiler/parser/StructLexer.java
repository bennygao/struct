// Generated from Struct.g4 by ANTLR 4.5.3
package cc.devfun.struct.compiler.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class StructLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		Identifier=25, DecimalLiteral=26, HexLiteral=27, StringLiteral=28, FloatingPointLiteral=29, 
		WS=30, SL_COMMENT=31, COMMENT=32;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "Identifier", 
		"DecimalLiteral", "HexLiteral", "StringLiteral", "FloatingPointLiteral", 
		"HexDigit", "Exponent", "FloatTypeSuffix", "EscapeSequence", "OctalEscape", 
		"Letter", "JavaIDDigit", "WS", "SL_COMMENT", "COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'#include'", "'struct'", "'{'", "'}'", "';'", "'='", "'+'", "'-'", 
		"'byte'", "'int8'", "'uint8'", "'short'", "'int16'", "'uint16'", "'int'", 
		"'int32'", "'uint32'", "'int64'", "'uint64'", "'float'", "'double'", "'string'", 
		"'['", "']'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "Identifier", "DecimalLiteral", "HexLiteral", "StringLiteral", "FloatingPointLiteral", 
		"WS", "SL_COMMENT", "COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public StructLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Struct.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\"\u0180\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3"+
		"\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\7\32\u00ca\n\32\f\32\16"+
		"\32\u00cd\13\32\3\33\3\33\3\33\7\33\u00d2\n\33\f\33\16\33\u00d5\13\33"+
		"\5\33\u00d7\n\33\3\34\3\34\3\34\3\34\5\34\u00dd\n\34\3\34\6\34\u00e0\n"+
		"\34\r\34\16\34\u00e1\3\35\3\35\3\35\7\35\u00e7\n\35\f\35\16\35\u00ea\13"+
		"\35\3\35\3\35\3\36\6\36\u00ef\n\36\r\36\16\36\u00f0\3\36\3\36\7\36\u00f5"+
		"\n\36\f\36\16\36\u00f8\13\36\3\36\5\36\u00fb\n\36\3\36\5\36\u00fe\n\36"+
		"\3\36\3\36\6\36\u0102\n\36\r\36\16\36\u0103\3\36\5\36\u0107\n\36\3\36"+
		"\5\36\u010a\n\36\3\36\6\36\u010d\n\36\r\36\16\36\u010e\3\36\3\36\5\36"+
		"\u0113\n\36\3\36\6\36\u0116\n\36\r\36\16\36\u0117\3\36\3\36\3\36\3\36"+
		"\3\36\5\36\u011f\n\36\3\36\7\36\u0122\n\36\f\36\16\36\u0125\13\36\3\36"+
		"\3\36\7\36\u0129\n\36\f\36\16\36\u012c\13\36\5\36\u012e\n\36\3\36\3\36"+
		"\5\36\u0132\n\36\3\36\6\36\u0135\n\36\r\36\16\36\u0136\3\36\5\36\u013a"+
		"\n\36\5\36\u013c\n\36\3\37\3\37\3 \3 \5 \u0142\n \3 \6 \u0145\n \r \16"+
		" \u0146\3!\3!\3\"\3\"\3\"\5\"\u014e\n\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\5#"+
		"\u0159\n#\3$\3$\3%\3%\3&\6&\u0160\n&\r&\16&\u0161\3&\3&\3\'\3\'\3\'\3"+
		"\'\7\'\u016a\n\'\f\'\16\'\u016d\13\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\7(\u0177"+
		"\n(\f(\16(\u017a\13(\3(\3(\3(\3(\3(\4\u016b\u0178\2)\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37=\2?\2A\2C\2E\2G\2"+
		"I\2K M!O\"\3\2\f\4\2$$^^\4\2RRrr\4\2--//\5\2\62;CHch\4\2GGgg\6\2FFHHf"+
		"fhh\n\2$$))^^ddhhppttvv\16\2&&C\\aac|\u00c2\u00d8\u00da\u00f8\u00fa\u2001"+
		"\u3042\u3191\u3302\u3381\u3402\u3d2f\u4e02\ua001\uf902\ufb01\21\2\62;"+
		"\u0662\u066b\u06f2\u06fb\u0968\u0971\u09e8\u09f1\u0a68\u0a71\u0ae8\u0af1"+
		"\u0b68\u0b71\u0be9\u0bf1\u0c68\u0c71\u0ce8\u0cf1\u0d68\u0d71\u0e52\u0e5b"+
		"\u0ed2\u0edb\u1042\u104b\5\2\13\f\17\17\"\"\u019d\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2K\3\2\2\2\2M\3"+
		"\2\2\2\2O\3\2\2\2\3Q\3\2\2\2\5Z\3\2\2\2\7a\3\2\2\2\tc\3\2\2\2\13e\3\2"+
		"\2\2\rg\3\2\2\2\17i\3\2\2\2\21k\3\2\2\2\23m\3\2\2\2\25r\3\2\2\2\27w\3"+
		"\2\2\2\31}\3\2\2\2\33\u0083\3\2\2\2\35\u0089\3\2\2\2\37\u0090\3\2\2\2"+
		"!\u0094\3\2\2\2#\u009a\3\2\2\2%\u00a1\3\2\2\2\'\u00a7\3\2\2\2)\u00ae\3"+
		"\2\2\2+\u00b4\3\2\2\2-\u00bb\3\2\2\2/\u00c2\3\2\2\2\61\u00c4\3\2\2\2\63"+
		"\u00c6\3\2\2\2\65\u00d6\3\2\2\2\67\u00dc\3\2\2\29\u00e3\3\2\2\2;\u013b"+
		"\3\2\2\2=\u013d\3\2\2\2?\u013f\3\2\2\2A\u0148\3\2\2\2C\u014d\3\2\2\2E"+
		"\u0158\3\2\2\2G\u015a\3\2\2\2I\u015c\3\2\2\2K\u015f\3\2\2\2M\u0165\3\2"+
		"\2\2O\u0172\3\2\2\2QR\7%\2\2RS\7k\2\2ST\7p\2\2TU\7e\2\2UV\7n\2\2VW\7w"+
		"\2\2WX\7f\2\2XY\7g\2\2Y\4\3\2\2\2Z[\7u\2\2[\\\7v\2\2\\]\7t\2\2]^\7w\2"+
		"\2^_\7e\2\2_`\7v\2\2`\6\3\2\2\2ab\7}\2\2b\b\3\2\2\2cd\7\177\2\2d\n\3\2"+
		"\2\2ef\7=\2\2f\f\3\2\2\2gh\7?\2\2h\16\3\2\2\2ij\7-\2\2j\20\3\2\2\2kl\7"+
		"/\2\2l\22\3\2\2\2mn\7d\2\2no\7{\2\2op\7v\2\2pq\7g\2\2q\24\3\2\2\2rs\7"+
		"k\2\2st\7p\2\2tu\7v\2\2uv\7:\2\2v\26\3\2\2\2wx\7w\2\2xy\7k\2\2yz\7p\2"+
		"\2z{\7v\2\2{|\7:\2\2|\30\3\2\2\2}~\7u\2\2~\177\7j\2\2\177\u0080\7q\2\2"+
		"\u0080\u0081\7t\2\2\u0081\u0082\7v\2\2\u0082\32\3\2\2\2\u0083\u0084\7"+
		"k\2\2\u0084\u0085\7p\2\2\u0085\u0086\7v\2\2\u0086\u0087\7\63\2\2\u0087"+
		"\u0088\78\2\2\u0088\34\3\2\2\2\u0089\u008a\7w\2\2\u008a\u008b\7k\2\2\u008b"+
		"\u008c\7p\2\2\u008c\u008d\7v\2\2\u008d\u008e\7\63\2\2\u008e\u008f\78\2"+
		"\2\u008f\36\3\2\2\2\u0090\u0091\7k\2\2\u0091\u0092\7p\2\2\u0092\u0093"+
		"\7v\2\2\u0093 \3\2\2\2\u0094\u0095\7k\2\2\u0095\u0096\7p\2\2\u0096\u0097"+
		"\7v\2\2\u0097\u0098\7\65\2\2\u0098\u0099\7\64\2\2\u0099\"\3\2\2\2\u009a"+
		"\u009b\7w\2\2\u009b\u009c\7k\2\2\u009c\u009d\7p\2\2\u009d\u009e\7v\2\2"+
		"\u009e\u009f\7\65\2\2\u009f\u00a0\7\64\2\2\u00a0$\3\2\2\2\u00a1\u00a2"+
		"\7k\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\78\2\2\u00a5"+
		"\u00a6\7\66\2\2\u00a6&\3\2\2\2\u00a7\u00a8\7w\2\2\u00a8\u00a9\7k\2\2\u00a9"+
		"\u00aa\7p\2\2\u00aa\u00ab\7v\2\2\u00ab\u00ac\78\2\2\u00ac\u00ad\7\66\2"+
		"\2\u00ad(\3\2\2\2\u00ae\u00af\7h\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1\7"+
		"q\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3\7v\2\2\u00b3*\3\2\2\2\u00b4\u00b5"+
		"\7f\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7w\2\2\u00b7\u00b8\7d\2\2\u00b8"+
		"\u00b9\7n\2\2\u00b9\u00ba\7g\2\2\u00ba,\3\2\2\2\u00bb\u00bc\7u\2\2\u00bc"+
		"\u00bd\7v\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0\7p\2\2"+
		"\u00c0\u00c1\7i\2\2\u00c1.\3\2\2\2\u00c2\u00c3\7]\2\2\u00c3\60\3\2\2\2"+
		"\u00c4\u00c5\7_\2\2\u00c5\62\3\2\2\2\u00c6\u00cb\5G$\2\u00c7\u00ca\5G"+
		"$\2\u00c8\u00ca\5I%\2\u00c9\u00c7\3\2\2\2\u00c9\u00c8\3\2\2\2\u00ca\u00cd"+
		"\3\2\2\2\u00cb\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\64\3\2\2\2\u00cd"+
		"\u00cb\3\2\2\2\u00ce\u00d7\7\62\2\2\u00cf\u00d3\4\63;\2\u00d0\u00d2\4"+
		"\62;\2\u00d1\u00d0\3\2\2\2\u00d2\u00d5\3\2\2\2\u00d3\u00d1\3\2\2\2\u00d3"+
		"\u00d4\3\2\2\2\u00d4\u00d7\3\2\2\2\u00d5\u00d3\3\2\2\2\u00d6\u00ce\3\2"+
		"\2\2\u00d6\u00cf\3\2\2\2\u00d7\66\3\2\2\2\u00d8\u00d9\7\62\2\2\u00d9\u00dd"+
		"\7z\2\2\u00da\u00db\7\62\2\2\u00db\u00dd\7Z\2\2\u00dc\u00d8\3\2\2\2\u00dc"+
		"\u00da\3\2\2\2\u00dd\u00df\3\2\2\2\u00de\u00e0\5=\37\2\u00df\u00de\3\2"+
		"\2\2\u00e0\u00e1\3\2\2\2\u00e1\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2"+
		"8\3\2\2\2\u00e3\u00e8\7$\2\2\u00e4\u00e7\5C\"\2\u00e5\u00e7\n\2\2\2\u00e6"+
		"\u00e4\3\2\2\2\u00e6\u00e5\3\2\2\2\u00e7\u00ea\3\2\2\2\u00e8\u00e6\3\2"+
		"\2\2\u00e8\u00e9\3\2\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb"+
		"\u00ec\7$\2\2\u00ec:\3\2\2\2\u00ed\u00ef\4\62;\2\u00ee\u00ed\3\2\2\2\u00ef"+
		"\u00f0\3\2\2\2\u00f0\u00ee\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\3\2"+
		"\2\2\u00f2\u00f6\7\60\2\2\u00f3\u00f5\4\62;\2\u00f4\u00f3\3\2\2\2\u00f5"+
		"\u00f8\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7\u00fa\3\2"+
		"\2\2\u00f8\u00f6\3\2\2\2\u00f9\u00fb\5? \2\u00fa\u00f9\3\2\2\2\u00fa\u00fb"+
		"\3\2\2\2\u00fb\u00fd\3\2\2\2\u00fc\u00fe\5A!\2\u00fd\u00fc\3\2\2\2\u00fd"+
		"\u00fe\3\2\2\2\u00fe\u013c\3\2\2\2\u00ff\u0101\7\60\2\2\u0100\u0102\4"+
		"\62;\2\u0101\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u0101\3\2\2\2\u0103"+
		"\u0104\3\2\2\2\u0104\u0106\3\2\2\2\u0105\u0107\5? \2\u0106\u0105\3\2\2"+
		"\2\u0106\u0107\3\2\2\2\u0107\u0109\3\2\2\2\u0108\u010a\5A!\2\u0109\u0108"+
		"\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u013c\3\2\2\2\u010b\u010d\4\62;\2\u010c"+
		"\u010b\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010c\3\2\2\2\u010e\u010f\3\2"+
		"\2\2\u010f\u0110\3\2\2\2\u0110\u0112\5? \2\u0111\u0113\5A!\2\u0112\u0111"+
		"\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u013c\3\2\2\2\u0114\u0116\4\62;\2\u0115"+
		"\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0115\3\2\2\2\u0117\u0118\3\2"+
		"\2\2\u0118\u0119\3\2\2\2\u0119\u013c\5A!\2\u011a\u011b\7\62\2\2\u011b"+
		"\u011f\7z\2\2\u011c\u011d\7\62\2\2\u011d\u011f\7Z\2\2\u011e\u011a\3\2"+
		"\2\2\u011e\u011c\3\2\2\2\u011f\u0123\3\2\2\2\u0120\u0122\5=\37\2\u0121"+
		"\u0120\3\2\2\2\u0122\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2"+
		"\2\2\u0124\u012d\3\2\2\2\u0125\u0123\3\2\2\2\u0126\u012a\7\60\2\2\u0127"+
		"\u0129\5=\37\2\u0128\u0127\3\2\2\2\u0129\u012c\3\2\2\2\u012a\u0128\3\2"+
		"\2\2\u012a\u012b\3\2\2\2\u012b\u012e\3\2\2\2\u012c\u012a\3\2\2\2\u012d"+
		"\u0126\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u0131\t\3"+
		"\2\2\u0130\u0132\t\4\2\2\u0131\u0130\3\2\2\2\u0131\u0132\3\2\2\2\u0132"+
		"\u0134\3\2\2\2\u0133\u0135\4\62;\2\u0134\u0133\3\2\2\2\u0135\u0136\3\2"+
		"\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0139\3\2\2\2\u0138"+
		"\u013a\5A!\2\u0139\u0138\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013c\3\2\2"+
		"\2\u013b\u00ee\3\2\2\2\u013b\u00ff\3\2\2\2\u013b\u010c\3\2\2\2\u013b\u0115"+
		"\3\2\2\2\u013b\u011e\3\2\2\2\u013c<\3\2\2\2\u013d\u013e\t\5\2\2\u013e"+
		">\3\2\2\2\u013f\u0141\t\6\2\2\u0140\u0142\t\4\2\2\u0141\u0140\3\2\2\2"+
		"\u0141\u0142\3\2\2\2\u0142\u0144\3\2\2\2\u0143\u0145\4\62;\2\u0144\u0143"+
		"\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147"+
		"@\3\2\2\2\u0148\u0149\t\7\2\2\u0149B\3\2\2\2\u014a\u014b\7^\2\2\u014b"+
		"\u014e\t\b\2\2\u014c\u014e\5E#\2\u014d\u014a\3\2\2\2\u014d\u014c\3\2\2"+
		"\2\u014eD\3\2\2\2\u014f\u0150\7^\2\2\u0150\u0151\4\62\65\2\u0151\u0152"+
		"\4\629\2\u0152\u0159\4\629\2\u0153\u0154\7^\2\2\u0154\u0155\4\629\2\u0155"+
		"\u0159\4\629\2\u0156\u0157\7^\2\2\u0157\u0159\4\629\2\u0158\u014f\3\2"+
		"\2\2\u0158\u0153\3\2\2\2\u0158\u0156\3\2\2\2\u0159F\3\2\2\2\u015a\u015b"+
		"\t\t\2\2\u015bH\3\2\2\2\u015c\u015d\t\n\2\2\u015dJ\3\2\2\2\u015e\u0160"+
		"\t\13\2\2\u015f\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u015f\3\2\2\2"+
		"\u0161\u0162\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0164\b&\2\2\u0164L\3\2"+
		"\2\2\u0165\u0166\7\61\2\2\u0166\u0167\7\61\2\2\u0167\u016b\3\2\2\2\u0168"+
		"\u016a\13\2\2\2\u0169\u0168\3\2\2\2\u016a\u016d\3\2\2\2\u016b\u016c\3"+
		"\2\2\2\u016b\u0169\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u016b\3\2\2\2\u016e"+
		"\u016f\7\f\2\2\u016f\u0170\3\2\2\2\u0170\u0171\b\'\3\2\u0171N\3\2\2\2"+
		"\u0172\u0173\7\61\2\2\u0173\u0174\7,\2\2\u0174\u0178\3\2\2\2\u0175\u0177"+
		"\13\2\2\2\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0179\3\2\2\2"+
		"\u0178\u0176\3\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017c"+
		"\7,\2\2\u017c\u017d\7\61\2\2\u017d\u017e\3\2\2\2\u017e\u017f\b(\3\2\u017f"+
		"P\3\2\2\2$\2\u00c9\u00cb\u00d3\u00d6\u00dc\u00e1\u00e6\u00e8\u00f0\u00f6"+
		"\u00fa\u00fd\u0103\u0106\u0109\u010e\u0112\u0117\u011e\u0123\u012a\u012d"+
		"\u0131\u0136\u0139\u013b\u0141\u0146\u014d\u0158\u0161\u016b\u0178\4\b"+
		"\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}